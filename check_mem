#!/usr/bin/env bash
#
# Check for high memory usage on an Illumos
# based machine
#
# Not typically a problem in itself, but can
# indicate future problems
#
# Author: Dave Eddy <dave@voxer.com>
# License: MIT
# Creation Date: 9/14/2012
# 01/10/2014 Added check for global zone

warning=90
critical=95
perfdata=true
tmpoutfile=/tmp/check_mem.tmp

while getopts 'nw:c:' option; do
	case "$option" in
		n) perfdata=false;;
		w) warning=$OPTARG;;
		c) critical=$OPTARG;;
	esac
done

# Am I on a global or non-global zone?
if [ $(zonename) = "global" ]
then
  # We're on a gz, sum up rss from all zones
  i=0
  for value in $(kstat -pc zone_memory_cap :::rss | awk '{print $NF}'); do 
    i=$(($i + $value))
  done
  # The global zone rss is missing in kstat, so we get it from prstat
  prstat -Z -z 0 1 1 > $tmpoutfile
  gzrssmb=$(cat $tmpoutfile | sed -n "/ZONEID/,/Total/p" | sed -n "2p" | awk '{print $4}' | awk -FM '{print $1}')
  gzrss=$(( $gzrssmb * 1024 * 1024))
  rss=$(($i + $gzrss))
  physcapmb=$(prtconf |grep "Memory size" | awk '{print $3}')
  physcap=$(( $physcapmb * 1024 * 1024))
  # rss and physcap are now populated
  perc_used=$(( $rss * 100 / $physcap))
  rm $tmpoutfile
else
  # Read the cap and the used rss on a ngz
  while read name value; do
        IFS=: read _ _ _ name <<< "$name"
        read "$name" <<< "$value"
  done < <(kstat -pc zone_memory_cap :::rss :::physcap)
  # rss and physcap are now populated
  perc_used=$(( rss * 100 / physcap ))
fi

if [[ -z "$perc_used" ]]; then
	echo 'unknown: error retrieving data'
	exit 3
elif (( perc_used >= critical )); then
	echo -n 'critical: '
	ret=2
elif (( perc_used >= warning )); then
	echo -n 'warning: '
	ret=1
else
	echo -n 'ok: '
	ret=0
fi

echo -n "$perc_used% used (warning=$warning%, critical=$critical%)"
$perfdata && echo "|mem_used=$rss;mem_cap=$physcap" || echo
exit "$ret"
